{"version":3,"sources":["logo.svg","components/Card/card.js","components/rolodex.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","src","empRec","picture","large","alt","lastname","firstname","title","age","format","birthdate","hiredate","serviceyears","phone","cell","email","streetno","streetname","city","state","postalcode","country","Rolodex","filterRef","useRef","clauseRef","valueRef","useState","employee","sortlist","filterlist","empState","setEmployeeState","liElement","sortKeys","filterKey","mapResult","setMapResult","sortEmp","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","useEffect","async","axios","get","rolodexContents","spreadResult","data","results","map","spreadRec","name","first","last","dob","date","idtype","id","idnumber","value","location","street","number","postcode","registered","length","liEle","login","uuid","optnEle","Object","keys","empKey","indexOf","defaultValue","onChange","event","currSortState","newState","sort","target","ref","current","type","handleInputType","style","width","placeholder","onClick","console","log","filter","rec","filterCat","filterRel","filterVal","setFilterClause","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+IAAAA,EAAOC,QAAU,IAA0B,kC,4OCkD5BC,MA9Cf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,oBACb,yBACEA,UAAU,eACVC,IAAKF,EAAMG,OAAOC,QAAQC,MAC1BC,IAAI,MAGR,yBAAKL,UAAU,wBACb,4BACGD,EAAMG,OAAOI,SADhB,KAC4BP,EAAMG,OAAOK,UADzC,KAEGR,EAAMG,OAAOM,MAFhB,KAIA,qCAAWT,EAAMG,OAAOO,KACxB,uCACU,kBAAC,IAAD,CAAQC,OAAO,cAAcX,EAAMG,OAAOS,YAEpD,gDACoB,IAClB,kBAAC,IAAD,CAAQD,OAAO,cAAcX,EAAMG,OAAOU,WAE5C,kDAAwBb,EAAMG,OAAOW,cACrC,4BACG,UAAYd,EAAMG,OAAOY,MACzB,IACA,SAAWf,EAAMG,OAAOa,MAE3B,4BAAKhB,EAAMG,OAAOc,QAEpB,yBAAKhB,UAAU,2BACb,yCACA,4BACGD,EAAMG,OAAOe,SADhB,IAC2BlB,EAAMG,OAAOgB,YAExC,4BAAKnB,EAAMG,OAAOiB,MAClB,4BACGpB,EAAMG,OAAOkB,MADhB,KACyBrB,EAAMG,OAAOmB,YAEtC,4BAAKtB,EAAMG,OAAOoB,YCyKXC,MAhNf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MACnBE,EAAWF,iBAAO,MAHP,EAIoBG,mBAAS,CAC5CC,SAAU,GACVC,SAAU,GACVC,WAAY,KAPG,mBAIVC,EAJU,KAIAC,EAJA,OAUiBL,mBAAS,CACzCM,UAAW,GACXC,SAAU,GACVC,UAAW,WAbI,mBAUVC,EAVU,KAUCC,EAVD,KAsEjB,SAASC,EAAQC,GAAqB,IAAhBC,EAAe,uDAAP,MAC5B,OAAO,SAAmBC,EAAGC,GAC3B,IAAKD,EAAEE,eAAeJ,KAASG,EAAEC,eAAeJ,GAE9C,OAAO,EAGT,IAAMK,EAAyB,kBAAXH,EAAEF,GAAoBE,EAAEF,GAAKM,cAAgBJ,EAAEF,GAC7DO,EAAyB,kBAAXJ,EAAEH,GAAoBG,EAAEH,GAAKM,cAAgBH,EAAEH,GAE/DQ,EAAa,EAMjB,OALIH,EAAOE,EACTC,EAAa,EACJH,EAAOE,IAChBC,GAAc,GAEC,SAAVP,GAAiC,EAAdO,EAAkBA,GAkFhD,OAxJAC,qBAAU,YACR,WAAC,UAAAP,EAAAQ,OAAA,kEAAAR,EAAA,MAC+BS,IAAMC,IAClC,0CAFH,OACOC,EADP,QAIKC,EAJL,YAIwBD,EAAgBE,KAAKC,UAC/BC,KAAI,SAAAC,GACfA,EAAUnD,UAAYmD,EAAUC,KAAKC,MACrCF,EAAUpD,SAAWoD,EAAUC,KAAKE,KACpCH,EAAUlD,MAAQkD,EAAUC,KAAKnD,MACjCkD,EAAUjD,IAAMiD,EAAUI,IAAIrD,IAC9BiD,EAAU/C,UAAY+C,EAAUI,IAAIC,KACpCL,EAAUM,OAASN,EAAUO,GAAGN,KAChCD,EAAUQ,SAAWR,EAAUO,GAAGE,MAClCT,EAAUpC,QAAUoC,EAAUU,SAAS9C,QACvCoC,EAAUvC,KAAOuC,EAAUU,SAASjD,KACpCuC,EAAUzC,SAAWyC,EAAUU,SAASC,OAAOC,OAC/CZ,EAAUxC,WAAawC,EAAUU,SAASC,OAAOV,KACjDD,EAAUrC,WAAaqC,EAAUU,SAASG,SAC1Cb,EAAUtC,MAAQsC,EAAUU,SAAShD,MACrCsC,EAAU9C,SAAW8C,EAAUc,WAAWT,KAC1CL,EAAU7C,aAAe6C,EAAUc,WAAW/D,OAEhDwB,EAAiB,CACfJ,SAAUyB,EACVxB,SAAUwB,IAxBb,qCAAD,KA2BC,IAEHL,qBAAU,WACR,GAAIjB,EAASH,SAAS4C,OAAS,EAAG,CAChC,IAAIC,EAAQ1C,EAASH,SAAS4B,KAAI,SAAAvD,GAAM,OACtC,wBAAIsC,IAAKtC,EAAOyE,MAAMC,MACpB,kBAAC,EAAD,CAAM1E,OAAQA,QAGd2E,EAAUC,OAAOC,KAAK/C,EAASH,SAAS,IAAI4B,KAAI,SAAAuB,GAElD,IAAoC,GADhB,CAAC,OAAQ,MAAO,KAAM,WAAY,cACtCC,QAAQD,GACtB,OACE,4BAAQxC,IAAKwC,EAAQb,MAAOa,GACzBA,MAKT1C,EAAa,CACXJ,UAAWwC,EACXvC,SAAU0C,OAGb,CAAC7C,EAASH,WAqGX,yBAAK7B,UAAU,UACb,8BACE,yBAAKA,UAAU,cACb,4BAAQiE,GAAG,SAASiB,aAAa,GAAGC,SAlF5C,SAAsBC,GACpB,IAAMC,EAAgBrD,EAASF,SAC3BwD,EAAQ,YAAOD,GACfC,EAASb,OAAS,GACpBxC,EAAiB,CACfJ,SAAUyD,EAASC,KAAKhD,EAAQ6C,EAAMI,OAAOrB,QAC7CrC,SAAUwD,EAASC,KAAKhD,EAAQ6C,EAAMI,OAAOrB,YA6ExC9B,EAAUF,UAEb,6CACA,4BACE8B,GAAG,kBACHwB,IAAKjE,EACL0D,aAAa,GACbC,SAhCV,SAA0BC,GAExBzD,EAAS+D,QAAQC,KAGnB,SAAyBP,GACvB,OAAQA,EAAMI,OAAOrB,OACnB,IAAK,MACL,IAAK,eACH,MAAO,SACT,IAAK,YACL,IAAK,WACH,MACF,IAAK,QACH,MAAO,QACT,QACE,MAAO,QAdayB,CAAgBR,KAgC/B/C,EAAUF,UAEb,0BAAM8B,GAAG,gBAAT,oBACA,0BAAM4B,MAAO,CAAEC,MAAO,SACtB,4BAAQ7B,GAAG,sBAAsBwB,IAAK/D,EAAWwD,aAAa,IAC5D,8CACA,8DACA,2DACA,mDAEF,0BAAMW,MAAO,CAAEC,MAAO,SACtB,2BACEH,KAAK,OACL1B,GAAG,eACHwB,IAAK9D,EACLgC,KAAK,eACLoC,YAAY,kCAEd,4BAAQC,QAlFhB,SAAwBZ,GACtB,IAAMC,EAAgBrD,EAASF,SAC3BwD,EAAQ,YAAOD,GACnBY,QAAQC,IAAI,gBACRZ,EAASb,OAAS,GACpBxC,EAAiB,CACfJ,SAAUyD,EAASa,QAAO,SAAAC,GAOxB,GANAH,QAAQC,IACN,mBACA1E,EAAUkE,QAAQvB,MAClBzC,EAAUgE,QAAQvB,MAClBxC,EAAS+D,QAAQvB,OA5B3B,SAAyBpE,EAAOsG,EAAWC,EAAWC,GAGpD,OAFIxG,EAAMsG,GAEFC,GACN,IAAK,WACH,OAAOvG,EAAMsG,IAAcE,EAC7B,IAAK,2BACH,OAAOxG,EAAMsG,IAAcE,EAC7B,IAAK,wBACH,OAAOxG,EAAMsG,IAAcE,EAC7B,IAAK,eACH,OAAOxG,EAAMsG,IAAcE,EAC7B,QACE,OAAO,GAkBHC,CACEJ,EACA5E,EAAUkE,QAAQvB,MAClBzC,EAAUgE,QAAQvB,MAClBxC,EAAS+D,QAAQvB,OAInB,OADA8B,QAAQC,IAAI,aACLE,KAGXtE,SAAUwD,EAASC,KAAKhD,EAAQ6C,EAAMI,OAAOrB,YAyD3C,YAGJ,4BAAK9B,EAAUH,aCjMNuE,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOvC,SAASwC,UAEe,UAA7BD,OAAOvC,SAASwC,UAEhBD,OAAOvC,SAASwC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8b1337dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./style.css\";\nimport Moment from \"react-moment\";\n\nfunction Card(props) {\n  return (\n    <div className=\"row \">\n      <div className=\"col-sm-2 empCard\">\n        <img\n          className=\"profileImage\"\n          src={props.empRec.picture.large}\n          alt=\"\"\n        ></img>\n      </div>\n      <div className=\"col-sm-4 empCharCard\">\n        <h3>\n          {props.empRec.lastname}, {props.empRec.firstname} (\n          {props.empRec.title})\n        </h3>\n        <h5>Age : {props.empRec.age}</h5>\n        <h5>\n          D.O.B : <Moment format=\"YYYY/MM/DD\">{props.empRec.birthdate}</Moment>\n        </h5>\n        <h5>\n          Employment Date :{\" \"}\n          <Moment format=\"YYYY/MM/DD\">{props.empRec.hiredate}</Moment>\n        </h5>\n        <h5>Years of Service : {props.empRec.serviceyears}</h5>\n        <h5>\n          {\" Phone:\" + props.empRec.phone}\n          {\"/\"}\n          {\" Cell:\" + props.empRec.cell}\n        </h5>\n        <h5>{props.empRec.email}</h5>\n      </div>\n      <div className=\"col-sm-4 empAddressCard\">\n        <h3> Address </h3>\n        <h5>\n          {props.empRec.streetno} {props.empRec.streetname}\n        </h5>\n        <h5>{props.empRec.city}</h5>\n        <h5>\n          {props.empRec.state}, {props.empRec.postalcode}\n        </h5>\n        <h5>{props.empRec.country}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./rolodex.css\";\r\nimport Card from \"./Card/card.js\";\r\n\r\nfunction Rolodex() {\r\n  const filterRef = useRef(null);\r\n  const clauseRef = useRef(null);\r\n  const valueRef = useRef(null);\r\n  const [empState, setEmployeeState] = useState({\r\n    employee: [],\r\n    sortlist: [],\r\n    filterlist: []\r\n  });\r\n\r\n  const [mapResult, setMapResult] = useState({\r\n    liElement: [],\r\n    sortKeys: [],\r\n    filterKey: \"gender\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function dummyFunc() {\r\n      const rolodexContents = await axios.get(\r\n        \"https://randomuser.me/api/?results=50\"\r\n      );\r\n      var spreadResult = [...rolodexContents.data.results];\r\n      spreadResult.map(spreadRec => {\r\n        spreadRec.firstname = spreadRec.name.first;\r\n        spreadRec.lastname = spreadRec.name.last;\r\n        spreadRec.title = spreadRec.name.title;\r\n        spreadRec.age = spreadRec.dob.age;\r\n        spreadRec.birthdate = spreadRec.dob.date;\r\n        spreadRec.idtype = spreadRec.id.name;\r\n        spreadRec.idnumber = spreadRec.id.value;\r\n        spreadRec.country = spreadRec.location.country;\r\n        spreadRec.city = spreadRec.location.city;\r\n        spreadRec.streetno = spreadRec.location.street.number;\r\n        spreadRec.streetname = spreadRec.location.street.name;\r\n        spreadRec.postalcode = spreadRec.location.postcode;\r\n        spreadRec.state = spreadRec.location.state;\r\n        spreadRec.hiredate = spreadRec.registered.date;\r\n        spreadRec.serviceyears = spreadRec.registered.age;\r\n      });\r\n      setEmployeeState({\r\n        employee: spreadResult,\r\n        sortlist: spreadResult\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (empState.employee.length > 0) {\r\n      var liEle = empState.employee.map(empRec => (\r\n        <li key={empRec.login.uuid}>\r\n          <Card empRec={empRec} />\r\n        </li>\r\n      ));\r\n      var optnEle = Object.keys(empState.employee[0]).map(empKey => {\r\n        const excludeList = [\"name\", \"dob\", \"id\", \"location\", \"registered\"];\r\n        if (excludeList.indexOf(empKey) == -1) {\r\n          return (\r\n            <option key={empKey} value={empKey}>\r\n              {empKey}\r\n            </option>\r\n          );\r\n        }\r\n      });\r\n      setMapResult({\r\n        liElement: liEle,\r\n        sortKeys: optnEle\r\n      });\r\n    }\r\n  }, [empState.employee]);\r\n\r\n  function sortEmp(key, order = \"asc\") {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  }\r\n\r\n  function handleSortOp(event) {\r\n    const currSortState = empState.sortlist;\r\n    let newState = [...currSortState];\r\n    if (newState.length > 0) {\r\n      setEmployeeState({\r\n        employee: newState.sort(sortEmp(event.target.value)),\r\n        sortlist: newState.sort(sortEmp(event.target.value))\r\n      });\r\n    }\r\n  }\r\n\r\n  function setFilterClause(props, filterCat, filterRel, filterVal) {\r\n    if (props[filterCat] == filterVal) {\r\n    }\r\n    switch (filterRel) {\r\n      case \"equal to\":\r\n        return props[filterCat] == filterVal;\r\n      case \"greater than or equal to\":\r\n        return props[filterCat] >= filterVal;\r\n      case \"less than or equal to\":\r\n        return props[filterCat] <= filterVal;\r\n      case \"not equal to\":\r\n        return props[filterCat] != filterVal;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function handleFilterOp(event) {\r\n    const currSortState = empState.sortlist;\r\n    let newState = [...currSortState];\r\n    console.log(\"B4 I am here\");\r\n    if (newState.length > 0) {\r\n      setEmployeeState({\r\n        employee: newState.filter(rec => {\r\n          console.log(\r\n            \"in setting state\",\r\n            filterRef.current.value,\r\n            clauseRef.current.value,\r\n            valueRef.current.value\r\n          );\r\n          if (\r\n            setFilterClause(\r\n              rec,\r\n              filterRef.current.value,\r\n              clauseRef.current.value,\r\n              valueRef.current.value\r\n            )\r\n          ) {\r\n            console.log(\"I am here\");\r\n            return rec;\r\n          }\r\n        }),\r\n        sortlist: newState.sort(sortEmp(event.target.value))\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleWhereInput(event) {\r\n    // clauseRef.current.innerText = `where ${event.target.value} =`;\r\n    valueRef.current.type = handleInputType(event);\r\n  }\r\n\r\n  function handleInputType(event) {\r\n    switch (event.target.value) {\r\n      case \"age\":\r\n      case \"serviceyears\":\r\n        return \"number\";\r\n      case \"birthdate\":\r\n      case \"hiredate\":\r\n        break;\r\n      case \"email\":\r\n        return \"email\";\r\n      default:\r\n        return \"text\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"btnBar\">\r\n      <span>\r\n        <div className=\"btnContent\">\r\n          <select id=\"sortby\" defaultValue=\"\" onChange={handleSortOp}>\r\n            {mapResult.sortKeys}\r\n          </select>\r\n          <span> Filter By </span>\r\n          <select\r\n            id=\"filter_category\"\r\n            ref={filterRef}\r\n            defaultValue=\"\"\r\n            onChange={handleWhereInput}\r\n          >\r\n            {mapResult.sortKeys}\r\n          </select>\r\n          <span id=\"where_clause\"> where gender = </span>\r\n          <span style={{ width: \"3px\" }}></span>\r\n          <select id=\"filter_relationship\" ref={clauseRef} defaultValue=\"\">\r\n            <option> equal to </option>\r\n            <option> greater than or equal to </option>\r\n            <option> less than or equal to </option>\r\n            <option> not equal to </option>\r\n          </select>\r\n          <span style={{ width: \"3px\" }}></span>\r\n          <input\r\n            type=\"text\"\r\n            id=\"filter_value\"\r\n            ref={valueRef}\r\n            name=\"filter_input\"\r\n            placeholder=\"Enter value to filter list by\"\r\n          ></input>\r\n          <button onClick={handleFilterOp}>Filter</button>\r\n        </div>\r\n      </span>\r\n      <ul>{mapResult.liElement}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rolodex;\r\n","import React from \"react\";\n// eslint-disable-next-line\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Rolodex from \"./components/rolodex\";\n\nfunction App() {\n  return (\n    <div>\n      <Rolodex />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Moment from \"react-moment\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}